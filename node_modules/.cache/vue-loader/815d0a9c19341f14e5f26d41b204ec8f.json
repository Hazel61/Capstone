{"remainingRequest":"/Users/shani/Projects/wats4000/wats4000-final-project/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/shani/Projects/wats4000/wats4000-final-project/src/views/CitySearch.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/shani/Projects/wats4000/wats4000-final-project/src/views/CitySearch.vue","mtime":1559697946000},{"path":"/Users/shani/Projects/wats4000/wats4000-final-project/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/shani/Projects/wats4000/wats4000-final-project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shani/Projects/wats4000/wats4000-final-project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {API} from '@/common/api';\n// import {API} from '@/common/api2'\nimport ErrorList from '@/components/ErrorList';\nimport WeatherSummary from '@/components/WeatherSummary';\nimport WeatherConditions from '@/components/WeatherConditions';\n\n\nexport default {\n    name: 'CitySearch',\n    data() {\n        return {\n            results: null,\n            errors: [],\n            query: 'Seattle'\n        }\n    },\n    methods: {\n        getCities: function () {\n            API.get('find', {\n                params: {\n                    q: this.query\n                }\n            })\n            .then(response => {\n                this.results = response.data\n            })\n            .catch(error => {\n                this.errors.push(error)\n            });\n        }\n    },\n    components: {\n        'weather-summary': WeatherSummary,\n        'weather-conditions': WeatherConditions,\n        'error-list': ErrorList\n    }\n}\n",{"version":3,"sources":["CitySearch.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CitySearch.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div>\n        <h2>Welcome to my Seattle temperature tracker.</h2>\n        <p>I have lived in Seattle for most of my life, and I know the city is warming up. I thought it would be interesting to dive into\n        NOAA's and Open Weather Map's API's and look at some historical data on the city. Click below to see the current  </p>\n\n            <p>\n                <button v-on:click=\"getCities\" type=\"submit\">Current Weather</button>\n            </p>\n\n            <ul class=\"cities\" v-if=\"results && results.list.length > 0\">\n            <li v-for=\"(city,index) in results.list\" :key=\"index\">\n                <h2>{{ city.name }}, {{ city.sys.country }}</h2>\n                <!--<p><router-link v-bind:to=\"{ name: 'CurrentWeather', params: { cityId: city.id } }\">View Current Weather</router-link></p>-->\n                <weather-summary v-bind:weatherData=\"city.weather\"></weather-summary>\n                <weather-conditions v-bind:conditions=\"city.main\"></weather-conditions>\n            </li>\n        </ul>\n\n            <p>\n                <router-link v-bind:to=\"{name:'Seattle'}\">Request High temperatures</router-link>\n            </p>\n\n        <error-list v-bind:errorList=\"errors\"></error-list>\n    </div>\n</template>\n\n<script>\n    import {API} from '@/common/api';\n    // import {API} from '@/common/api2'\n    import ErrorList from '@/components/ErrorList';\n    import WeatherSummary from '@/components/WeatherSummary';\n    import WeatherConditions from '@/components/WeatherConditions';\n\n\n    export default {\n        name: 'CitySearch',\n        data() {\n            return {\n                results: null,\n                errors: [],\n                query: 'Seattle'\n            }\n        },\n        methods: {\n            getCities: function () {\n                API.get('find', {\n                    params: {\n                        q: this.query\n                    }\n                })\n                .then(response => {\n                    this.results = response.data\n                })\n                .catch(error => {\n                    this.errors.push(error)\n                });\n            }\n        },\n        components: {\n            'weather-summary': WeatherSummary,\n            'weather-conditions': WeatherConditions,\n            'error-list': ErrorList\n        }\n    }\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n    h2 {\n        color: blue;\n    }\n    .errors li {\n        color: red;\n        border: solid red 1px;\n        padding: 5px;\n    }\n\n    h1, h2 {\n        font-weight: normal;\n    }\n\n    ul {\n        list-style-type: none;\n        padding: 0;\n    }\n\n    li {\n        display: inline-block;\n        width: 300px;\n        min-height: 300px;\n        border: solid 1px #e8e8e8;\n        padding: 10px;\n        margin: 5px;\n    }\n\n    .weatherSummary {\n        display: inline-block;\n        width: 100px;\n    }\n\n    a {\n        color: #42b983;\n    }\n</style>\n\n\n"]}]}