{"remainingRequest":"/Users/shani/Projects/wats4000/wats4000-final-project/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/shani/Projects/wats4000/wats4000-final-project/src/views/Seattle.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/shani/Projects/wats4000/wats4000-final-project/src/views/Seattle.vue","mtime":1559714171000},{"path":"/Users/shani/Projects/wats4000/wats4000-final-project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shani/Projects/wats4000/wats4000-final-project/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/shani/Projects/wats4000/wats4000-final-project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shani/Projects/wats4000/wats4000-final-project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport axios from 'axios';\nimport ErrorList from '@/components/ErrorList';\n\n\nexport default {\n    name: 'Seattle',\n    data() {\n        return {\n            results: null,\n            errors: [],\n        }\n    },\n    created() {\n        axios.get('https://www.ncdc.noaa.gov/cdo-web/api/v2/data', {\n            headers: {\n                token: 'AlOCstuxmDrmZEVMyzYRHkJtzIOjDLBD',\n            },\n            params: {\n                stationid: \"GHCND:USW00024233\",\n                units: \"standard\",\n                datatypeid: \"TMAX\",\n                limit: 100,\n                startdate: \"2018-01-01\",\n                enddate: \"2018-12-31\",\n                datasetid: \"GSOM\"\n            }\n        })\n            .then(response => {\n                this.results = response.data\n            })\n            .catch(error => {\n                this.errors.push(error)\n            });\n    },\n    components: {\n        'error-list': ErrorList\n\n    }\n}\n",{"version":3,"sources":["Seattle.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAsBA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"Seattle.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div>\n        <h2>Seattle: average temperature by month for the last ten years</h2>\n\n        <ul class=\"cities\" v-if=\"results && results.length > 0\">\n            <li v-for=\"(result,index) in results\" :key=\"index\">\n                <p>High Temperature</p>\n                <p>{{ result.value }}&deg;F</p>\n            </li>\n        </ul>\n\n        <div v-if=\"errors.length > 0\">\n            <h2>There was an error fetching weather data.</h2>\n            <ul class=\"errors\">\n                <li v-for=\"(error,index) in errors\" :key=\"index\">{{ error }}</li>\n            </ul>\n            <error-list v-bind:errorList=\"errors\"></error-list>\n        </div>\n    </div>\n</template>\n\n<script>\n    import axios from 'axios';\n    import ErrorList from '@/components/ErrorList';\n\n\n    export default {\n        name: 'Seattle',\n        data() {\n            return {\n                results: null,\n                errors: [],\n            }\n        },\n        created() {\n            axios.get('https://www.ncdc.noaa.gov/cdo-web/api/v2/data', {\n                headers: {\n                    token: 'AlOCstuxmDrmZEVMyzYRHkJtzIOjDLBD',\n                },\n                params: {\n                    stationid: \"GHCND:USW00024233\",\n                    units: \"standard\",\n                    datatypeid: \"TMAX\",\n                    limit: 100,\n                    startdate: \"2018-01-01\",\n                    enddate: \"2018-12-31\",\n                    datasetid: \"GSOM\"\n                }\n            })\n                .then(response => {\n                    this.results = response.data\n                })\n                .catch(error => {\n                    this.errors.push(error)\n                });\n        },\n        components: {\n            'error-list': ErrorList\n\n        }\n    }\n</script>\n\n<style scoped>\n    .errors li {\n        color: red;\n        border: solid red 1px;\n        padding: 5px;\n    }\n\n    h1, h2 {\n        font-weight: normal;\n    }\n\n    ul {\n        list-style-type: none;\n        padding: 0;\n    }\n\n    li {\n        display: inline-block;\n        width: 300px;\n        min-height: 300px;\n        border: solid 1px #e8e8e8;\n        padding: 10px;\n        margin: 5px;\n    }\n\n    a {\n        color: #42b983;\n    }\n</style>"]}]}