{"remainingRequest":"/Users/shani/Projects/wats4000/wats4000-final-project/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/shani/Projects/wats4000/wats4000-final-project/src/views/Charts.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/shani/Projects/wats4000/wats4000-final-project/src/views/Charts.vue","mtime":1560101986000},{"path":"/Users/shani/Projects/wats4000/wats4000-final-project/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/shani/Projects/wats4000/wats4000-final-project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shani/Projects/wats4000/wats4000-final-project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport axios from 'axios';\n// import ErrorList from '@/components/ErrorList';\nimport LineChart from '@/components/LineChart';\n\nexport default {\n    name: 'Seattle',\n    data() {\n        return {\n            chartdata: {\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n                datasets: [\n                    {\n                        label: 'High Temperature',\n                        backgroundColor: '#f87979',\n                        data: []\n                    },\n                    {\n                        label: 'Low Temperature',\n                        backgroundColor: 'blue',\n                        data: [20, 10],\n                    }\n                ]\n            },\n            chartOptions: {\n\n            },\n            results: null,\n            errors: [],\n            Months: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n        }\n    },\n\n    created() {\n        // High Temperature call\n        axios.get('https://www.ncdc.noaa.gov/cdo-web/api/v2/data', {\n            headers: {\n                token: 'AlOCstuxmDrmZEVMyzYRHkJtzIOjDLBD',\n            },\n            params: {\n                stationid: \"GHCND:USW00024233\",\n                units: \"standard\",\n                datatypeid: \"EMXT\",\n                limit: 100,\n                startdate: \"2018-01-01\",\n                enddate: \"2018-12-31\",\n                datasetid: \"GSOM\"\n            }\n        })\n            .then(response => {\n                this.results = response.data.results;\n                let highTemperatures = this.chartdata.datasets.find(dataset => dataset.label === 'High Temperature');\n                if (highTemperatures) {\n                    highTemperatures.data = this.results.map(result => result.value);\n                    console.log(highTemperatures.data);\n                } else {\n                    console.error('Could not find high temperature dataset.');\n                }\n            })\n            .catch(error => {\n                this.errors.push(error)\n            });\n\n        // Low Temperature call\n        axios.get('https://www.ncdc.noaa.gov/cdo-web/api/v2/data', {\n            headers: {\n                token: 'AlOCstuxmDrmZEVMyzYRHkJtzIOjDLBD',\n            },\n            params: {\n                stationid: \"GHCND:USW00024233\",\n                units: \"standard\",\n                datatypeid: \"EMNT\",\n                limit: 100,\n                startdate: \"2018-01-01\",\n                enddate: \"2018-12-31\",\n                datasetid: \"GSOM\"\n            }\n        })\n            .then(response => {\n                this.results = response.data.results;\n                let lowTemperatures = this.chartdata.datasets.find(dataset => dataset.label === 'Low Temperature');\n                if (lowTemperatures) {\n                    lowTemperatures.data = this.results.map(result => result.value);\n                    console.log(lowTemperatures.data);\n                } else {\n                    console.error('Could not find high temperature dataset.');\n                }\n            })\n            .catch(error => {\n                this.errors.push(error)\n            });\n    },\n    components: {\n        // 'error-list': ErrorList,\n        'line-chart': LineChart\n    }\n}\n",{"version":3,"sources":["Charts.vue"],"names":[],"mappings":";;;;;;;;;;;;AAYA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Charts.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div>\n        <p>\n            High and low temperatures for 2018\n        </p>\n        <p>\n            <line-chart :options=\"chartOptions\" :chartdata=\"chartdata\"/>\n        </p>\n    </div>\n</template>\n\n<script>\n    import axios from 'axios';\n    // import ErrorList from '@/components/ErrorList';\n    import LineChart from '@/components/LineChart';\n\n    export default {\n        name: 'Seattle',\n        data() {\n            return {\n                chartdata: {\n                    labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n                    datasets: [\n                        {\n                            label: 'High Temperature',\n                            backgroundColor: '#f87979',\n                            data: []\n                        },\n                        {\n                            label: 'Low Temperature',\n                            backgroundColor: 'blue',\n                            data: [20, 10],\n                        }\n                    ]\n                },\n                chartOptions: {\n\n                },\n                results: null,\n                errors: [],\n                Months: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n            }\n        },\n\n        created() {\n            // High Temperature call\n            axios.get('https://www.ncdc.noaa.gov/cdo-web/api/v2/data', {\n                headers: {\n                    token: 'AlOCstuxmDrmZEVMyzYRHkJtzIOjDLBD',\n                },\n                params: {\n                    stationid: \"GHCND:USW00024233\",\n                    units: \"standard\",\n                    datatypeid: \"EMXT\",\n                    limit: 100,\n                    startdate: \"2018-01-01\",\n                    enddate: \"2018-12-31\",\n                    datasetid: \"GSOM\"\n                }\n            })\n                .then(response => {\n                    this.results = response.data.results;\n                    let highTemperatures = this.chartdata.datasets.find(dataset => dataset.label === 'High Temperature');\n                    if (highTemperatures) {\n                        highTemperatures.data = this.results.map(result => result.value);\n                        console.log(highTemperatures.data);\n                    } else {\n                        console.error('Could not find high temperature dataset.');\n                    }\n                })\n                .catch(error => {\n                    this.errors.push(error)\n                });\n\n            // Low Temperature call\n            axios.get('https://www.ncdc.noaa.gov/cdo-web/api/v2/data', {\n                headers: {\n                    token: 'AlOCstuxmDrmZEVMyzYRHkJtzIOjDLBD',\n                },\n                params: {\n                    stationid: \"GHCND:USW00024233\",\n                    units: \"standard\",\n                    datatypeid: \"EMNT\",\n                    limit: 100,\n                    startdate: \"2018-01-01\",\n                    enddate: \"2018-12-31\",\n                    datasetid: \"GSOM\"\n                }\n            })\n                .then(response => {\n                    this.results = response.data.results;\n                    let lowTemperatures = this.chartdata.datasets.find(dataset => dataset.label === 'Low Temperature');\n                    if (lowTemperatures) {\n                        lowTemperatures.data = this.results.map(result => result.value);\n                        console.log(lowTemperatures.data);\n                    } else {\n                        console.error('Could not find high temperature dataset.');\n                    }\n                })\n                .catch(error => {\n                    this.errors.push(error)\n                });\n        },\n        components: {\n            // 'error-list': ErrorList,\n            'line-chart': LineChart\n        }\n    }\n</script>\n\n<style scoped>\n\n</style>"]}]}