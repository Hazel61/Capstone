{"remainingRequest":"/Users/shani/Projects/wats4000/wats4000-final-project/node_modules/babel-loader/lib/index.js!/Users/shani/Projects/wats4000/wats4000-final-project/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/shani/Projects/wats4000/wats4000-final-project/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/shani/Projects/wats4000/wats4000-final-project/src/views/Seattle.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/shani/Projects/wats4000/wats4000-final-project/src/views/Seattle.vue","mtime":1559754334000},{"path":"/Users/shani/Projects/wats4000/wats4000-final-project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shani/Projects/wats4000/wats4000-final-project/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/shani/Projects/wats4000/wats4000-final-project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shani/Projects/wats4000/wats4000-final-project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nimport ErrorList from '@/components/ErrorList';\nexport default {\n  name: 'Seattle',\n\n  data() {\n    return {\n      results: null,\n      errors: []\n    };\n  },\n\n  created() {\n    axios.get('https://www.ncdc.noaa.gov/cdo-web/api/v2/data', {\n      headers: {\n        token: 'AlOCstuxmDrmZEVMyzYRHkJtzIOjDLBD'\n      },\n      params: {\n        stationid: \"GHCND:USW00024233\",\n        units: \"standard\",\n        datatypeid: \"TMAX\",\n        limit: 100,\n        startdate: \"2018-01-01\",\n        enddate: \"2018-12-31\",\n        datasetid: \"GSOM\"\n      }\n    }).then(response => {\n      this.results = response.data;\n    }).catch(error => {\n      this.errors.push(error);\n    });\n  },\n\n  components: {\n    'error-list': ErrorList\n  }\n};",{"version":3,"sources":["Seattle.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAqBA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,SAAA,MAAA,wBAAA;AAGA,eAAA;AACA,EAAA,IAAA,EAAA,SADA;;AAEA,EAAA,IAAA,GAAA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,IADA;AAEA,MAAA,MAAA,EAAA;AAFA,KAAA;AAIA,GAPA;;AAQA,EAAA,OAAA,GAAA;AACA,IAAA,KAAA,CAAA,GAAA,CAAA,+CAAA,EAAA;AACA,MAAA,OAAA,EAAA;AACA,QAAA,KAAA,EAAA;AADA,OADA;AAIA,MAAA,MAAA,EAAA;AACA,QAAA,SAAA,EAAA,mBADA;AAEA,QAAA,KAAA,EAAA,UAFA;AAGA,QAAA,UAAA,EAAA,MAHA;AAIA,QAAA,KAAA,EAAA,GAJA;AAKA,QAAA,SAAA,EAAA,YALA;AAMA,QAAA,OAAA,EAAA,YANA;AAOA,QAAA,SAAA,EAAA;AAPA;AAJA,KAAA,EAcA,IAdA,CAcA,QAAA,IAAA;AACA,WAAA,OAAA,GAAA,QAAA,CAAA,IAAA;AACA,KAhBA,EAiBA,KAjBA,CAiBA,KAAA,IAAA;AACA,WAAA,MAAA,CAAA,IAAA,CAAA,KAAA;AACA,KAnBA;AAoBA,GA7BA;;AA8BA,EAAA,UAAA,EAAA;AACA,kBAAA;AADA;AA9BA,CAAA","sourcesContent":["<template>\n    <div>\n        <h2>Seattle: average temperature by month for the last ten years</h2>\n\n        <ul class=\"results\" v-if=results.length > 0\">\n            <li v-for=\"(result,index) in results\" :key=\"index\">\n               High Temperature, {{result.value}}\n            </li>\n        </ul>\n<h2>past the ul</h2>\n        <div v-if=\"errors.length > 0\">\n            <h2>There was an error fetching weather data.</h2>\n            <ul class=\"errors\">\n                <li v-for=\"(error,index) in errors\" :key=\"index\">{{ error }}</li>\n            </ul>\n            <error-list v-bind:errorList=\"errors\"></error-list>\n        </div>\n    </div>\n</template>\n\n<script>\n    import axios from 'axios';\n    import ErrorList from '@/components/ErrorList';\n\n\n    export default {\n        name: 'Seattle',\n        data() {\n            return {\n                results: null,\n                errors: [],\n            }\n        },\n        created() {\n            axios.get('https://www.ncdc.noaa.gov/cdo-web/api/v2/data', {\n                headers: {\n                    token: 'AlOCstuxmDrmZEVMyzYRHkJtzIOjDLBD',\n                },\n                params: {\n                    stationid: \"GHCND:USW00024233\",\n                    units: \"standard\",\n                    datatypeid: \"TMAX\",\n                    limit: 100,\n                    startdate: \"2018-01-01\",\n                    enddate: \"2018-12-31\",\n                    datasetid: \"GSOM\"\n                }\n            })\n                .then(response => {\n                    this.results = response.data\n                })\n                .catch(error => {\n                    this.errors.push(error)\n                });\n        },\n        components: {\n            'error-list': ErrorList\n\n        }\n    }\n</script>\n\n<style scoped>\n    .errors li {\n        color: red;\n        border: solid red 1px;\n        padding: 5px;\n    }\n\n    h1, h2 {\n        font-weight: normal;\n    }\n\n    ul {\n        list-style-type: none;\n        padding: 0;\n    }\n\n    li {\n        display: inline-block;\n        width: 300px;\n        min-height: 300px;\n        border: solid 1px #e8e8e8;\n        padding: 10px;\n        margin: 5px;\n    }\n\n    a {\n        color: #42b983;\n    }\n</style>"],"sourceRoot":"src/views"}]}